<!DOCTYPE html>
<html>
  
<head>
  <title>Patient Information Form</title>
  <meta charSet="utf-8" />
  <meta http-equiv="X-UA-Compatible" content="IE=edge" />
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <title>Register | E-Hospital</title>
  <meta name="author" content="E-Hospital" />

  <meta property="og:url" content="register.html" />
  <meta property="og:site_name" content="E-Hospital" />
  <meta property="og:title" content="E-Hospital" />
  <meta property="og:type" content="website" />
  <meta property="og:image" content="https://img1.wsimg.com/isteam/stock/Ddj9aVd" />
  <meta property="og:locale" content="en_CA" />
  <link href="css/login.css" rel="stylesheet" type="text/css">
  <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.6.3/jquery.min.js"></script>

  <style>
    table, th, td {
      border:1px solid black;
    }
  </style>
    
  <script>

    // Run the code when the page finished loading
    $(document).ready(function() {

      let params = (new URL(document.location)).searchParams;
      let phoneNumber = 6131230002;
      // Get the patient records
      $.ajax({
        url: "/healthTestRetrieveByPhoneNumber",
        type: 'POST',
        data: {
          phoneNumber: phoneNumber, 
          recordType: "tumor" // the table name that stores the record
        },
        //check the data to make sure it is there and pass it to convert()
        success: function(data) {
            if (data.error) {
                alert(JSON.stringify(data.error));
            } else {
                convert(data.success);
            }
        },
        error: function(xhr, textStatus, errorThrown) {
          // Handle error response from server
          alert(textStatus + ': ' + errorThrown);
        }
        
      });
    });

    //Takes the information of the patient and stores it as a list
    function convert(data) {
        let record = data[0];
        if (!data) {
            alert("No data received");
            return;
        } else {
            console.log(record);
            myList = Object.values(record);
            console.log(myList);
            createTable(record);
            return(myList);
        }

    }
//display results in table. Not sure how to format this in terms of location.
    function createTable(data) {
        const table = document.createElement('table');
        const tbody = document.createElement('tbody');
        table.id = "myTable";
        table.style.zIndex = "999";
        table.style.position = "absolute";
        let row = tbody.insertRow();
        let header = row.insertCell(0);
        header.innerHTML = "<b>Parameter</b>";
        let valueHeader = row.insertCell(1);
        valueHeader.innerHTML = "<b>Value</b>";
        for (let key in data) {
            row = tbody.insertRow();
            let cell1 = row.insertCell(0);
            cell1.innerText = key;
            let cell2 = row.insertCell(1);
            cell2.innerText = data[key];
        }
        table.appendChild(tbody);
        document.body.appendChild(table);
    }

//runs the model with the selected patient's information
    function predict() {
        let announce;
        const finalInput = document.getElementById("diagnose");
        if (bc_diagnose(myList) === 1) {
            announce = "The tumor is malignant";
        } else {
            announce = "The tumor is benign";
        };
        finalInput.value = '' + announce;
        
    }

    function tableFill(value, date) {
        let thRecord = document.getElementById('record');
        let thDate = document.getElementById('recordDate');
        thDate.innerText = `Record Date: ${date}`;
        if (value === 1) {
            thRecord.innerText = "Record Type: Benign" ;
        } else {
            thRecord.innerText = "Record Type: Malignant";
        }
    }
    //decision tree prediciton model 0=benign, 1=malignant
    function bc_diagnose(ins) {
        if (ins[6] <= 0.049) {
            if (ins[4] <= 694.6) {
                if (ins[6] <= 0.045) {
                    if (ins[2] <= 22.455) {
                    return 1;
                } else {
                    if (ins[2] <= 22.575) {
                    return 0;
                } else {
                     return 1;
                }
            }
        } else {
            if (ins[2] <= 24.71) {
                return 1;
            } else {
                return 0;
            }
        }
            } else {
                if (ins[1] <= 16.08) {
                    return 0;
                } else {
                    if (ins[2] <= 19.83) {
                        return 1;
                    } else {
                        return 0;
                    }
                }
            }
            } else {
                if (ins[2] <= 14.16) {
                    if (ins[7] <= 0.174) {
                        return 1;
                    } else {
                        return 0;
                    }
                } else {
                    if (ins[3] <= 88.37) {
                        if (ins[5] <= 0.108) {
                            return 1;
                        } else {
                            if (ins[7] <= 0.107) {
                                return 1;
                            } else {
                                return 0;
                            }
                        }
                    } else {
                        if (ins[2] <= 16.235) {
                            if (ins[8] <= 0.075) {
                                if (ins[1] <= 14.22) {
                                    return 0;
                                } else {
                                    return 1;
                                }
                            } else {
                                return 0;
                            }
                        } else {
                            if (ins[5] < 0.088) {
                                if (ins[7] <= 0.125) {
                                    return 0;
                                } else {
                                    return 1;
                                }
                            } else {
                                return 0;
                            }
                        }
                    }
                }           
            }
    }

    // Send the image to the ML api for the prediction
    // async function predict(index) {
    //   console.log(recordList[index]);

    //   // Prepare submit data
    //   const form = new FormData();

    //   // Send to the ML API
    //   $.ajax({
    //     url: "/connectionTesting",
    //     type: 'POST',
    //     enctype: 'multipart/form-data',
    //     data: form,
    //     processData: false,
    //     contentType: false,
    //     cache: false,
    //     success: function(data) {
    //       // console.log(data);
    //       // data.error ? alert(JSON.stringify(data.error)) : alert(JSON.stringify(data));
    //       data.error ? alert(JSON.stringify(data.error)) : null;
    //       storePrediction(data, recordList[index]._id);
    //       console.log(`Succesful response ${JSON.stringify(data)}`);
    //       console.log(`Message is: ${JSON.stringify(data)}`);
    //       var st1=JSON.stringify(data);
    //       str= st1.replace(/[\[\]""]+/g,''); 
    //       str2 = str.replace(/[{}()]/g, '').replace(/[\[\]""]+/g,'');
    //       console.log(str2);         
    //       console.log(str2);        
    //       $("#diagnose").val(str2);
    //     },
    //     error: function(xhr, textStatus, errorThrown) {
    //       // Handle error response from server
    //       alert(textStatus + ': ' + errorThrown);
    //     }
    //   });
    // }

    // Store the prediction result to the database
    function storePrediction() {
      // Retrieved phone number and the current date
      let params = (new URL(document.location)).searchParams;
      let phoneNumber = 6131230002;
      let today = new Date();
      const offset = today.getTimezoneOffset();
      today = new Date(today.getTime() - (offset*60*1000)).toISOString();
      // Store to the database
      $.ajax({
        url: "/updateDisease",
        type: 'POST',
        data: {
          phoneNumber: phoneNumber,
          disease: "breast_cancer", 
          date: today,
          prediction: bc_diagnose(myList),
          accuracy: null,
          recordType: "tumor", // can be null if no record is used for the ML prediction
          recordId: 2,
        },
        success: function(data) {
          // console.log(data);
          const prediction = bc_diagnose(myList);
          const recordDate = today;
          console.log(prediction, recordDate);
          tableFill(prediction, recordDate);
          data.error ? alert(JSON.stringify(data.error)) : alert(data.success);
        },
        error: function(xhr, textStatus, errorThrown) {
          // Handle error response from server
          alert(textStatus + ': ' + errorThrown);
        }
      });
    }
  </script>
  
  <%- include('../partials/header') -%>
  <link href="/css/Pneumonia-diagnostics.css" rel="stylesheet" >
</head>
<body>
  <div class="header">
   
    <h1>Pneumonia Diagnostics</h1>
   
  </div>

  <div class="header2">
    <h3>Patient's Information</h3>
   
  </div>
  <div class="container" style="padding-top: 40px;">
    <table id="recordList" style="width:100%">
      <tr>
        <th id="record">Record</th>
        <th id="recordDate">Record Date</th>
      </tr>

    </table>
  </div>
  <div> 

    <div class="outer">
      <div class="result-box">
        <label for="diagnose">Test Result:</label>
        <br> 
        <input type="text" id="diagnose" name="diagnose" placeholder="Result" \
        style="border: 2px solid #ccc; border-radius: 4px; padding: 10px 10px;  width: 100%; font-size: 15px; font-weight: 500;
        color: #ae2727;
        animation: fadeIn 1s ease-in;box-sizing: border-box; 
        margin-top: 10px;" disabled="disabled" required>
        <button onclick="predict(); storePrediction()">Predict</button>
       </div>
            </form>
          </div>
      </div>
    <footer>
  <%- include('../partials/footer-new') -%>
  
  </footer>
  </div> 
  

</body>
</html>

